/*------------------------------------*\
    $STYLE CONTENTS
\*------------------------------------*/

/*
 * STYLE CONTENTS ............. this
 * EXPLANATION AND VARIABLES .. explains element v layout v module v state
 * ELEMENTS ................... styles applied to top-level elements
 * LAYOUTS .................... styles to generate high-level layouts
 * MODULES .................... complete "chunks" of formatting to drop into layouts
 * STATES ..................... temporary states
 */





/*------------------------------------*\
    $EXPLANATION AND VARIABLES
\*------------------------------------*/

/*
 * An element is a direct element you're acting on. (e.g., h1, body, html)
 *
 * A layout is the 'shelf' a module goes in.  Layouts should
 * contain positioning information & width definitions, but
 * should be content-agnostic.
 *
 * A module styles the element.  Modules should not define widths
 * or positioning.  They should be completely portable.  Dropping a module
 * into any layout item should produce a good effect, within reason.
 *
 * A state is something temporary, like a hover or JS interaction
 *
 * For media queries, use @include respond-to('device')
 * or use the appropriate _bp partial.  Media queries should be
 * mostly only affecting LAYOUTS, though in some cases may be
 * relevant to STATES (e.g., no hover on mobile phones).
 */

$black: #222;
$white: white;





/*------------------------------------*\
    $ELEMENTS
\*------------------------------------*/
// Remove me if you don't want any of the ready-made base styles
@import "rm-base-styles";





/*------------------------------------*\
    $LAYOUTS
\*------------------------------------*/
//  .block{}





/*------------------------------------*\
    $MODULES
\*------------------------------------*/
//  .block__element{}

.triangle-demo {
  @include triangle(black, 20px, right);
}



/*------------------------------------*\
    $STATES
\*------------------------------------*/
// .block--modifier{}
// .js-state{}




