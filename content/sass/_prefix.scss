/*
 * prefix mixins table of contents
 *
 * PREFIXES
 * experimental-property
 * experimental-value
 *
 * FLEXIBLE BOXES
 * display-flexbox
 * flex
 * align-items & box-align
 * flex-order & box-ordinal-group
 * flex-direction
 *
 * BORDER RADIUS
 * border-radius
 *
 * BOX SIZING
 * box-sizing
 *
 * TRANSITION
 * transition
 */

// $PREFIXES
// Experimental prefix generators
//
// Both default to ON for all prefixes, but any prefix can be selectively disabled
// Both accept either $key: bool pairs OR ordered strongs (webkit, moz, ms, o, official);

@mixin experimental-property($property, $value, $webkit: true, $moz: true, $ms: true, $o: true, $official: true) {
  $property: unquote($property);
  $value: unquote($value);

  @if $webkit and $webkit != "no webkit" {
    -webkit-#{$property}: #{$value};
  }
  @if $moz and $moz != "no moz" {
    -moz-#{$property}: #{$value};
  }
  @if $ms and $ms != "no ms" {
    -ms-#{$property}: #{$value};
  }
  // I've elected to remove Opera from this mixin since it uses webkit now.
  // @if $o and $o != "no o" {
    // -o-#{$property}: #{$value};
  // }
  @if $official and $official != "no official" {
    #{$property}: #{$value}
  }
}

@mixin experimental-value($property, $value, $webkit: true, $moz: true, $ms: true, $o: true, $official: true) {
  $property: unquote($property);
  $value: unquote($value);

  @if $webkit and $webkit != "no webkit" {
    #{$property}: -webkit-#{$value};
  }
  @if $moz and $moz != "no moz" {
    #{$property}: -moz-#{$value};
  }
  @if $ms and $ms != "no ms" {
    #{$property}: -ms-#{$value};
  }
  // I've elected to remove Opera from this mixin since it uses webkit now.
  // @if $o and $o != "no o" {
    // #{$property}: -o-#{$value};
  // }
  @if $official and $official != "no official" {
    #{$property}: #{$value}
  }
}

// $FLEXIBLE BOXES
// Flexible boxes are a gigantic mess.  Here's my attempt at thorough browser support

@mixin display-flexbox {
  @include experimental-value(display, box, "webkit", "moz", "no ms", "no o", "no official");
  @include experimental-value(display, flexbox, "no webkit", "no moz", "ms", "no o", "no official");
  @include experimental-value(display, flex, "webkit", "no moz", "no ms", "no o", "official");
}

@mixin flex($n) {
  @include experimental-property(box-flex, $n, "webkit", "moz", "no ms", "no o", "no official");
  @include experimental-property(flex, $n, "webkit", "no moz", "ms", "no o", "official");
}

@mixin align-items($to) {
  $to: unquote($to);

  @include experimental-property(box-align, $to, "webkit", "moz", "no ms", "no o", "no official");
  @include experimental-property(flex-align, $to, "no webkit", "no moz", "ms", "no o", "no official");
  @include experimental-property(align-items, $to, "webkit", "no moz", "no ms", "no o", "official");
}
  //align-items alias using the old property name
  @mixin box-align($to) {
    @include align-items($to);
  }

@mixin flex-order($n) {
  @include experimental-property(box-ordinal-group, $n, "webkit", "moz", "no ms", "no o", "no official");
  @include experimental-property(flex-order, $n, "no webkit", "no moz", "ms", "no o", "no official");
  @include experimental-property(order, $n, "webkit", "no moz", "no ms", "no o", "official");
}

  // flex-order alias using old property name
  @mixin box-ordinal-group($n) {
    @include flex-order($n);
  }

@mixin flex-direction($direction) {
  $direction: quote($direction);

  @if ($direction == "row") or ($direction == "horizontal") {
    @include experimental-property(box-orient, horizontal);
    flex-direction: row;
  } @else if ($direction == "column") or ($direction == "vertical") {
    @include experimental-property(box-orient, vertical);
    flex-direction: column;
  }
}

// $BORDER RADIUS
@mixin border-radius($sizes...) {
  @include experimental-property(border-radius, $sizes);
}

// $BOX SIZING
@mixin box-sizing($type) {
  $type: unquote($type);
  @include experimental-property(box-sizing, $type);
}

// $TRANSITION (ALL-IN-ONE)
@mixin transition($type...) {
  @include experimental-property(transition, $type);
}
